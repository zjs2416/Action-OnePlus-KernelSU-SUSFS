name: Build OnePlus_Kernel
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8550'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_open_v'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'kalama'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android13'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '5.15'
      KERNEL_NAME:
        description: "自定义内核名称"
        required: true
        default: '-android13-8-o-01125-g33c6a786772d'
      KERNEL_VER:
        description: "自定义版本"
        required: true
        default: 'default'
      kernelsu_variant:
        description: "选择 KSU"
        required: true
        type: choice
        options:
          - KSU
          - KSUN
          - MKSU
          - RKSU
          - SKSU
        default: RKSU
      kernelsu_version:
        description: "选择 KSU 版本"
        required: true
        type: choice
        options:
          - tag[Releases]
          - main[Ci]
        default: main[Ci]
      SUSFS_ENABLED:
        description: "添加 SUSFS"
        required: true
        type: boolean
        default: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
         git config --global user.name "DogEZ"
         git config --global user.email "DdogezD@gmail.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo 和 sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo sync
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: KSU & MKSU & RKSU Version
        run: |
         if [[ "${{ github.event.inputs.kernelsu_version }}" == "tag[Releases]" ]]; then
           echo "BRANCH=-" >> $GITHUB_ENV
         elif [[ "${{ github.event.inputs.kernelsu_version }}" == "main[Ci]" ]]; then
         if [[ "${{ github.event.inputs.kernelsu_variant }}" == "KSU" || "${{ github.event.inputs.kernelsu_variant }}" == "MKSU" || "${{ github.event.inputs.kernelsu_variant }}" == "RKSU" ]]; then
           echo "BRANCH=-s main" >> $GITHUB_ENV
          fi
         fi

      - name: Add KernelSU
        run: |
          cd kernel_workspace/kernel_platform
          if [ "${{ github.event.inputs.kernelsu_variant }}" == "KSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]; then
            curl -LSs "https://raw.githubusercontent.com/KernelSU-Next/KernelSU-Next/next/kernel/setup.sh" | bash ${{ env.BRANCH }}
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "MKSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "RKSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash -s susfs-v1.5.5
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU" ]; then
            curl -LSs "https://raw.githubusercontent.com/ShirkNeko/KernelSU/main/kernel/setup.sh" | bash -s susfs-dev
          fi
          
      - name: Apply SUSFS Patches KernelSU
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/TanakaLun/kernel_patches4mksu.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          
          if [ "${{ github.event.inputs.kernelsu_variant }}" == "KSU" ]; then
            cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU
            cd ./KernelSU
            patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]; then
            cd ./KernelSU-Next
            cp ../../kernel_patches4mksu/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./
            patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "MKSU" ]; then
            cd ./KernelSU
            cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./
            patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
            cp ../../kernel_patches4mksu/mksu/mksu_susfs.patch ./
            patch -p1 < mksu_susfs.patch || true
            cp ../../kernel_patches4mksu/mksu/fix.patch ./
            patch -p1 < fix.patch || true
            cp ../../kernel_patches4mksu/mksu/vfs_fix.patch ./
            patch -p1 < vfs_fix.patch
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "RKSU" ]; then
            cd KernelSU
          elif [ "${{ github.event.inputs.kernelsu_variant }}" == "SKSU" ]; then
            cd KernelSU
          fi
          
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          cp ../../kernel_patches4mksu/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch

      - name: Apply New Hooks Patches
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
         cd kernel_workspace/kernel_platform/common
         cp ../../kernel_patches4mksu/hooks/new_hooks.patch ./
         patch -p1 -F 3 < new_hooks.patch

      - name: Add SUSFS Configuration Settings
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          cd kernel_workspace/kernel_platform

          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig

          echo "CONFIG_DOCKER=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_PID_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPC_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CGROUP_DEVICE=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_BRIDGE_NETFILTER=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_MASQUERADE=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_NETFILTER_XT_MATCH_IPVS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_NAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_POSIX_MQUEUE=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_USER_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CGROUP_PIDS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CGROUP_PERF=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "DEVPTS_MULTIPLE_INSTANCES=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CGROUP_HUGETLB=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS_CGROUP=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CFS_BANDWIDTH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_VS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_VS_NFCT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_VS_PROTO_TCP=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_VS_PROTO_UDP=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_VS_RR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_SECURITY_APPARMOR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_VXLAN=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_BRIDGE_VLAN_FILTERIN=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPVLAN=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_MACVLAN=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_BTRFS_FS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_BTRFS_FS_POSIX_ACL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_SPL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZPOOL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZFS_DEBUG=n" >> ./common/arch/arm64/configs/gki_defconfig
          
          sed -i 's/check_defconfig//' ./common/build.config.gki
          
      - name: Handle KernelSU Version
        run: |
         if [[ "${{ github.event.inputs.kernelsu_variant }}" == "KSUN" ]]; then
            cd kernel_workspace/kernel_platform/KernelSU-Next
            MAKE_FILE="kernel/Makefile"
            DEFAULT_VERSION=11998
         else
            cd kernel_workspace/kernel_platform/KernelSU
            MAKE_FILE="kernel/Makefile"
            DEFAULT_VERSION=16    
         fi

         if [[ "${{ github.event.inputs.KERNEL_VER }}" == "default" ]]; then
            KSU_VERSION=$(( $(git rev-list --count HEAD) + 10200 ))
         else
            KSU_VERSION=${{ github.event.inputs.KERNEL_VER }}
         fi
    
         sed -i "s/DKSU_VERSION=${DEFAULT_VERSION}/DKSU_VERSION=${KSU_VERSION}/" "${MAKE_FILE}"
         echo "KSUVER=${KSU_VERSION}" >> $GITHUB_ENV

      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
         sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
         sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          
      - name: Build kernel
        run: |
         cd kernel_workspace
         LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki
         
      - name: Make AnyKernel3
        run: |
         git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
         rm -rf ./AnyKernel3/.git
         cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image ./AnyKernel3/
         cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image ./kernel_workspace/kernel
         
      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3-KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
         name: Image-KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: kernel_workspace/kernel
